name: Build Docker Image for release
on:
  release:
    types: [created]
  workflow_dispatch: # Allows for manual triggering

jobs:
  client-amd64:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Build OCI image
        uses: ./.github/actions/docker
        with:
          working-directory: ./client
          platform: linux/amd64
          tag: ${{ github.event.release.tag_name }}
          image: client
          gh-repository: ${{ github.repository }}
          actor: ${{ github.actor }}
          actor-token: ${{ secrets.GITHUB_TOKEN }}
  client-arm64:
    runs-on: ubuntu-24.04-arm
    needs: client-amd64
    defaults:
      run:
        working-directory: ./client
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Build OCI image
        uses: ./.github/actions/docker
        with:
          working-directory: ./client
          platform: linux/arm64
          tag: ${{ github.event.release.tag_name }}
          image: client
          gh-repository: ${{ github.repository }}
          actor: ${{ github.actor }}
          actor-token: ${{ secrets.GITHUB_TOKEN }}
  client-finalizer:
    runs-on: ubuntu-latest
    needs: [client-amd64, client-arm64]
    defaults:
      run:
        working-directory: ./client
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge manifests
        run: |
          amd_digest=$(docker manifest inspect ghcr.io/${{ github.repository }}/client:latest-amd64 | jq '.manifests[] | select(.platform.architecture == "amd64") | .digest' -r)
          arm_digest=$(docker manifest inspect ghcr.io/${{ github.repository }}/client:latest-arm64 | jq '.manifests[] | select(.platform.architecture == "arm64") | .digest' -r)
          echo "AMD Digest: $amd_digest"
          echo "ARM Digest: $arm_digest"
          docker manifest create ghcr.io/${{ github.repository }}/client:latest \
            --amend ghcr.io/${{ github.repository }}/client@$amd_digest \
            --amend ghcr.io/${{ github.repository }}/client@$arm_digest
          docker manifest create ghcr.io/${{ github.repository }}/client:${{ github.event.release.tag_name }} \
            --amend ghcr.io/${{ github.repository }}/client@$amd_digest \
            --amend ghcr.io/${{ github.repository }}/client@$arm_digest
          docker manifest push ghcr.io/${{ github.repository }}/client:latest
          docker manifest push ghcr.io/${{ github.repository }}/client:${{ github.event.release.tag_name }}
  api-amd64:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build OCI image
        uses: ./.github/actions/docker
        with:
          working-directory: ./api
          platform: linux/amd64
          tag: ${{ github.event.release.tag_name }}
          image: api
          gh-repository: ${{ github.repository }}
          actor: ${{ github.actor }}
          actor-token: ${{ secrets.GITHUB_TOKEN }}
  api-arm64:
    runs-on: ubuntu-24.04-arm
    needs: api-amd64
    defaults:
      run:
        working-directory: ./api
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build OCI image
        uses: ./.github/actions/docker
        with:
          working-directory: ./api
          platform: linux/arm64
          tag: ${{ github.event.release.tag_name }}
          image: api
          gh-repository: ${{ github.repository }}
          actor: ${{ github.actor }}
          actor-token: ${{ secrets.GITHUB_TOKEN }}
  api-finalizer:
    runs-on: ubuntu-latest
    needs: [api-amd64, api-arm64]
    defaults:
      run:
        working-directory: ./api
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge manifests
        run: |
          amd_digest=$(docker manifest inspect ghcr.io/${{ github.repository }}/api:latest-amd64 | jq '.manifests[] | select(.platform.architecture == "amd64") | .digest' -r)
          arm_digest=$(docker manifest inspect ghcr.io/${{ github.repository }}/api:latest-arm64 | jq '.manifests[] | select(.platform.architecture == "arm64") | .digest' -r)
          echo "AMD Digest: $amd_digest"
          echo "ARM Digest: $arm_digest"
          docker manifest create ghcr.io/${{ github.repository }}/api:latest \
            --amend ghcr.io/${{ github.repository }}/api@$amd_digest \
            --amend ghcr.io/${{ github.repository }}/api@$arm_digest
          docker manifest create ghcr.io/${{ github.repository }}/api:${{ github.event.release.tag_name }} \
            --amend ghcr.io/${{ github.repository }}/api@$amd_digest \
            --amend ghcr.io/${{ github.repository }}/api@$arm_digest
          docker manifest push ghcr.io/${{ github.repository }}/api:latest
          docker manifest push ghcr.io/${{ github.repository }}/api:${{ github.event.release.tag_name }}
